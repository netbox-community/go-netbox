/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.11 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// ExtrasObjectChangesListActionParameter the model 'ExtrasObjectChangesListActionParameter'
type ExtrasObjectChangesListActionParameter string

// List of extras_object_changes_list_action_parameter
const (
	EXTRASOBJECTCHANGESLISTACTIONPARAMETER_CREATE ExtrasObjectChangesListActionParameter = "create"
	EXTRASOBJECTCHANGESLISTACTIONPARAMETER_DELETE ExtrasObjectChangesListActionParameter = "delete"
	EXTRASOBJECTCHANGESLISTACTIONPARAMETER_UPDATE ExtrasObjectChangesListActionParameter = "update"
)

// All allowed values of ExtrasObjectChangesListActionParameter enum
var AllowedExtrasObjectChangesListActionParameterEnumValues = []ExtrasObjectChangesListActionParameter{
	"create",
	"delete",
	"update",
}

func (v *ExtrasObjectChangesListActionParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ExtrasObjectChangesListActionParameter(value)
	for _, existing := range AllowedExtrasObjectChangesListActionParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ExtrasObjectChangesListActionParameter", value)
}

// NewExtrasObjectChangesListActionParameterFromValue returns a pointer to a valid ExtrasObjectChangesListActionParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExtrasObjectChangesListActionParameterFromValue(v string) (*ExtrasObjectChangesListActionParameter, error) {
	ev := ExtrasObjectChangesListActionParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ExtrasObjectChangesListActionParameter: valid values are %v", v, AllowedExtrasObjectChangesListActionParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExtrasObjectChangesListActionParameter) IsValid() bool {
	for _, existing := range AllowedExtrasObjectChangesListActionParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to extras_object_changes_list_action_parameter value
func (v ExtrasObjectChangesListActionParameter) Ptr() *ExtrasObjectChangesListActionParameter {
	return &v
}

type NullableExtrasObjectChangesListActionParameter struct {
	value *ExtrasObjectChangesListActionParameter
	isSet bool
}

func (v NullableExtrasObjectChangesListActionParameter) Get() *ExtrasObjectChangesListActionParameter {
	return v.value
}

func (v *NullableExtrasObjectChangesListActionParameter) Set(val *ExtrasObjectChangesListActionParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableExtrasObjectChangesListActionParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableExtrasObjectChangesListActionParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtrasObjectChangesListActionParameter(val *ExtrasObjectChangesListActionParameter) *NullableExtrasObjectChangesListActionParameter {
	return &NullableExtrasObjectChangesListActionParameter{value: val, isSet: true}
}

func (v NullableExtrasObjectChangesListActionParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtrasObjectChangesListActionParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
