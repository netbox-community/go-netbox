/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.11 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// checks if the WritableDeviceWithConfigContextRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WritableDeviceWithConfigContextRequest{}

// WritableDeviceWithConfigContextRequest Adds support for custom fields and tags.
type WritableDeviceWithConfigContextRequest struct {
	Name       NullableString               `json:"name,omitempty"`
	DeviceType BriefDeviceTypeRequest       `json:"device_type"`
	Role       BriefDeviceRoleRequest       `json:"role"`
	Tenant     NullableBriefTenantRequest   `json:"tenant,omitempty"`
	Platform   NullableBriefPlatformRequest `json:"platform,omitempty"`
	// Chassis serial number, assigned by the manufacturer
	Serial *string `json:"serial,omitempty"`
	// A unique tag used to identify this device
	AssetTag NullableString               `json:"asset_tag,omitempty"`
	Site     BriefSiteRequest             `json:"site"`
	Location NullableBriefLocationRequest `json:"location,omitempty"`
	Rack     NullableBriefRackRequest     `json:"rack,omitempty"`
	Position NullableFloat64              `json:"position,omitempty"`
	Face     RackFace1                    `json:"face"`
	// GPS coordinate in decimal format (xx.yyyyyy)
	Latitude NullableFloat64 `json:"latitude,omitempty"`
	// GPS coordinate in decimal format (xx.yyyyyy)
	Longitude      NullableFloat64                    `json:"longitude,omitempty"`
	Status         *DeviceStatusValue                 `json:"status,omitempty"`
	Airflow        *DeviceAirflowValue                `json:"airflow,omitempty"`
	PrimaryIp4     NullableBriefIPAddressRequest      `json:"primary_ip4,omitempty"`
	PrimaryIp6     NullableBriefIPAddressRequest      `json:"primary_ip6,omitempty"`
	OobIp          NullableBriefIPAddressRequest      `json:"oob_ip,omitempty"`
	Cluster        NullableBriefClusterRequest        `json:"cluster,omitempty"`
	VirtualChassis NullableBriefVirtualChassisRequest `json:"virtual_chassis,omitempty"`
	VcPosition     NullableInt32                      `json:"vc_position,omitempty"`
	// Virtual chassis master election priority
	VcPriority     NullableInt32                      `json:"vc_priority,omitempty"`
	Description    *string                            `json:"description,omitempty"`
	Comments       *string                            `json:"comments,omitempty"`
	ConfigTemplate NullableBriefConfigTemplateRequest `json:"config_template,omitempty"`
	// Local config context data takes precedence over source contexts in the final rendered config context
	LocalContextData     interface{}            `json:"local_context_data,omitempty"`
	Tags                 []NestedTagRequest     `json:"tags,omitempty"`
	CustomFields         map[string]interface{} `json:"custom_fields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WritableDeviceWithConfigContextRequest WritableDeviceWithConfigContextRequest

// NewWritableDeviceWithConfigContextRequest instantiates a new WritableDeviceWithConfigContextRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWritableDeviceWithConfigContextRequest(deviceType BriefDeviceTypeRequest, role BriefDeviceRoleRequest, site BriefSiteRequest, face RackFace1) *WritableDeviceWithConfigContextRequest {
	this := WritableDeviceWithConfigContextRequest{}
	this.DeviceType = deviceType
	this.Role = role
	this.Site = site
	this.Face = face
	return &this
}

// NewWritableDeviceWithConfigContextRequestWithDefaults instantiates a new WritableDeviceWithConfigContextRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritableDeviceWithConfigContextRequestWithDefaults() *WritableDeviceWithConfigContextRequest {
	this := WritableDeviceWithConfigContextRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *WritableDeviceWithConfigContextRequest) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetName() {
	o.Name.Unset()
}

// GetDeviceType returns the DeviceType field value
func (o *WritableDeviceWithConfigContextRequest) GetDeviceType() BriefDeviceTypeRequest {
	if o == nil {
		var ret BriefDeviceTypeRequest
		return ret
	}

	return o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceWithConfigContextRequest) GetDeviceTypeOk() (*BriefDeviceTypeRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceType, true
}

// SetDeviceType sets field value
func (o *WritableDeviceWithConfigContextRequest) SetDeviceType(v BriefDeviceTypeRequest) {
	o.DeviceType = v
}

// GetRole returns the Role field value
func (o *WritableDeviceWithConfigContextRequest) GetRole() BriefDeviceRoleRequest {
	if o == nil {
		var ret BriefDeviceRoleRequest
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceWithConfigContextRequest) GetRoleOk() (*BriefDeviceRoleRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *WritableDeviceWithConfigContextRequest) SetRole(v BriefDeviceRoleRequest) {
	o.Role = v
}

// GetTenant returns the Tenant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetTenant() BriefTenantRequest {
	if o == nil || IsNil(o.Tenant.Get()) {
		var ret BriefTenantRequest
		return ret
	}
	return *o.Tenant.Get()
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetTenantOk() (*BriefTenantRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tenant.Get(), o.Tenant.IsSet()
}

// HasTenant returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasTenant() bool {
	if o != nil && o.Tenant.IsSet() {
		return true
	}

	return false
}

// SetTenant gets a reference to the given NullableBriefTenantRequest and assigns it to the Tenant field.
func (o *WritableDeviceWithConfigContextRequest) SetTenant(v BriefTenantRequest) {
	o.Tenant.Set(&v)
}

// SetTenantNil sets the value for Tenant to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetTenantNil() {
	o.Tenant.Set(nil)
}

// UnsetTenant ensures that no value is present for Tenant, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetTenant() {
	o.Tenant.Unset()
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetPlatform() BriefPlatformRequest {
	if o == nil || IsNil(o.Platform.Get()) {
		var ret BriefPlatformRequest
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetPlatformOk() (*BriefPlatformRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullableBriefPlatformRequest and assigns it to the Platform field.
func (o *WritableDeviceWithConfigContextRequest) SetPlatform(v BriefPlatformRequest) {
	o.Platform.Set(&v)
}

// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetPlatform() {
	o.Platform.Unset()
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *WritableDeviceWithConfigContextRequest) GetSerial() string {
	if o == nil || IsNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceWithConfigContextRequest) GetSerialOk() (*string, bool) {
	if o == nil || IsNil(o.Serial) {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasSerial() bool {
	if o != nil && !IsNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *WritableDeviceWithConfigContextRequest) SetSerial(v string) {
	o.Serial = &v
}

// GetAssetTag returns the AssetTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetAssetTag() string {
	if o == nil || IsNil(o.AssetTag.Get()) {
		var ret string
		return ret
	}
	return *o.AssetTag.Get()
}

// GetAssetTagOk returns a tuple with the AssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetAssetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssetTag.Get(), o.AssetTag.IsSet()
}

// HasAssetTag returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasAssetTag() bool {
	if o != nil && o.AssetTag.IsSet() {
		return true
	}

	return false
}

// SetAssetTag gets a reference to the given NullableString and assigns it to the AssetTag field.
func (o *WritableDeviceWithConfigContextRequest) SetAssetTag(v string) {
	o.AssetTag.Set(&v)
}

// SetAssetTagNil sets the value for AssetTag to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetAssetTagNil() {
	o.AssetTag.Set(nil)
}

// UnsetAssetTag ensures that no value is present for AssetTag, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetAssetTag() {
	o.AssetTag.Unset()
}

// GetSite returns the Site field value
func (o *WritableDeviceWithConfigContextRequest) GetSite() BriefSiteRequest {
	if o == nil {
		var ret BriefSiteRequest
		return ret
	}

	return o.Site
}

// GetSiteOk returns a tuple with the Site field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceWithConfigContextRequest) GetSiteOk() (*BriefSiteRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Site, true
}

// SetSite sets field value
func (o *WritableDeviceWithConfigContextRequest) SetSite(v BriefSiteRequest) {
	o.Site = v
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetLocation() BriefLocationRequest {
	if o == nil || IsNil(o.Location.Get()) {
		var ret BriefLocationRequest
		return ret
	}
	return *o.Location.Get()
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetLocationOk() (*BriefLocationRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Location.Get(), o.Location.IsSet()
}

// HasLocation returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasLocation() bool {
	if o != nil && o.Location.IsSet() {
		return true
	}

	return false
}

// SetLocation gets a reference to the given NullableBriefLocationRequest and assigns it to the Location field.
func (o *WritableDeviceWithConfigContextRequest) SetLocation(v BriefLocationRequest) {
	o.Location.Set(&v)
}

// SetLocationNil sets the value for Location to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetLocationNil() {
	o.Location.Set(nil)
}

// UnsetLocation ensures that no value is present for Location, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetLocation() {
	o.Location.Unset()
}

// GetRack returns the Rack field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetRack() BriefRackRequest {
	if o == nil || IsNil(o.Rack.Get()) {
		var ret BriefRackRequest
		return ret
	}
	return *o.Rack.Get()
}

// GetRackOk returns a tuple with the Rack field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetRackOk() (*BriefRackRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rack.Get(), o.Rack.IsSet()
}

// HasRack returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasRack() bool {
	if o != nil && o.Rack.IsSet() {
		return true
	}

	return false
}

// SetRack gets a reference to the given NullableBriefRackRequest and assigns it to the Rack field.
func (o *WritableDeviceWithConfigContextRequest) SetRack(v BriefRackRequest) {
	o.Rack.Set(&v)
}

// SetRackNil sets the value for Rack to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetRackNil() {
	o.Rack.Set(nil)
}

// UnsetRack ensures that no value is present for Rack, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetRack() {
	o.Rack.Unset()
}

// GetPosition returns the Position field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetPosition() float64 {
	if o == nil || IsNil(o.Position.Get()) {
		var ret float64
		return ret
	}
	return *o.Position.Get()
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetPositionOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Position.Get(), o.Position.IsSet()
}

// HasPosition returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasPosition() bool {
	if o != nil && o.Position.IsSet() {
		return true
	}

	return false
}

// SetPosition gets a reference to the given NullableFloat64 and assigns it to the Position field.
func (o *WritableDeviceWithConfigContextRequest) SetPosition(v float64) {
	o.Position.Set(&v)
}

// SetPositionNil sets the value for Position to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetPositionNil() {
	o.Position.Set(nil)
}

// UnsetPosition ensures that no value is present for Position, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetPosition() {
	o.Position.Unset()
}

// GetFace returns the Face field value
func (o *WritableDeviceWithConfigContextRequest) GetFace() RackFace1 {
	if o == nil {
		var ret RackFace1
		return ret
	}

	return o.Face
}

// GetFaceOk returns a tuple with the Face field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceWithConfigContextRequest) GetFaceOk() (*RackFace1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Face, true
}

// SetFace sets field value
func (o *WritableDeviceWithConfigContextRequest) SetFace(v RackFace1) {
	o.Face = v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetLatitude() float64 {
	if o == nil || IsNil(o.Latitude.Get()) {
		var ret float64
		return ret
	}
	return *o.Latitude.Get()
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetLatitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Latitude.Get(), o.Latitude.IsSet()
}

// HasLatitude returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasLatitude() bool {
	if o != nil && o.Latitude.IsSet() {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given NullableFloat64 and assigns it to the Latitude field.
func (o *WritableDeviceWithConfigContextRequest) SetLatitude(v float64) {
	o.Latitude.Set(&v)
}

// SetLatitudeNil sets the value for Latitude to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetLatitudeNil() {
	o.Latitude.Set(nil)
}

// UnsetLatitude ensures that no value is present for Latitude, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetLatitude() {
	o.Latitude.Unset()
}

// GetLongitude returns the Longitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetLongitude() float64 {
	if o == nil || IsNil(o.Longitude.Get()) {
		var ret float64
		return ret
	}
	return *o.Longitude.Get()
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetLongitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Longitude.Get(), o.Longitude.IsSet()
}

// HasLongitude returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasLongitude() bool {
	if o != nil && o.Longitude.IsSet() {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given NullableFloat64 and assigns it to the Longitude field.
func (o *WritableDeviceWithConfigContextRequest) SetLongitude(v float64) {
	o.Longitude.Set(&v)
}

// SetLongitudeNil sets the value for Longitude to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetLongitudeNil() {
	o.Longitude.Set(nil)
}

// UnsetLongitude ensures that no value is present for Longitude, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetLongitude() {
	o.Longitude.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WritableDeviceWithConfigContextRequest) GetStatus() DeviceStatusValue {
	if o == nil || IsNil(o.Status) {
		var ret DeviceStatusValue
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceWithConfigContextRequest) GetStatusOk() (*DeviceStatusValue, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given DeviceStatusValue and assigns it to the Status field.
func (o *WritableDeviceWithConfigContextRequest) SetStatus(v DeviceStatusValue) {
	o.Status = &v
}

// GetAirflow returns the Airflow field value if set, zero value otherwise.
func (o *WritableDeviceWithConfigContextRequest) GetAirflow() DeviceAirflowValue {
	if o == nil || IsNil(o.Airflow) {
		var ret DeviceAirflowValue
		return ret
	}
	return *o.Airflow
}

// GetAirflowOk returns a tuple with the Airflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceWithConfigContextRequest) GetAirflowOk() (*DeviceAirflowValue, bool) {
	if o == nil || IsNil(o.Airflow) {
		return nil, false
	}
	return o.Airflow, true
}

// HasAirflow returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasAirflow() bool {
	if o != nil && !IsNil(o.Airflow) {
		return true
	}

	return false
}

// SetAirflow gets a reference to the given DeviceAirflowValue and assigns it to the Airflow field.
func (o *WritableDeviceWithConfigContextRequest) SetAirflow(v DeviceAirflowValue) {
	o.Airflow = &v
}

// GetPrimaryIp4 returns the PrimaryIp4 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetPrimaryIp4() BriefIPAddressRequest {
	if o == nil || IsNil(o.PrimaryIp4.Get()) {
		var ret BriefIPAddressRequest
		return ret
	}
	return *o.PrimaryIp4.Get()
}

// GetPrimaryIp4Ok returns a tuple with the PrimaryIp4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetPrimaryIp4Ok() (*BriefIPAddressRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryIp4.Get(), o.PrimaryIp4.IsSet()
}

// HasPrimaryIp4 returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasPrimaryIp4() bool {
	if o != nil && o.PrimaryIp4.IsSet() {
		return true
	}

	return false
}

// SetPrimaryIp4 gets a reference to the given NullableBriefIPAddressRequest and assigns it to the PrimaryIp4 field.
func (o *WritableDeviceWithConfigContextRequest) SetPrimaryIp4(v BriefIPAddressRequest) {
	o.PrimaryIp4.Set(&v)
}

// SetPrimaryIp4Nil sets the value for PrimaryIp4 to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetPrimaryIp4Nil() {
	o.PrimaryIp4.Set(nil)
}

// UnsetPrimaryIp4 ensures that no value is present for PrimaryIp4, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetPrimaryIp4() {
	o.PrimaryIp4.Unset()
}

// GetPrimaryIp6 returns the PrimaryIp6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetPrimaryIp6() BriefIPAddressRequest {
	if o == nil || IsNil(o.PrimaryIp6.Get()) {
		var ret BriefIPAddressRequest
		return ret
	}
	return *o.PrimaryIp6.Get()
}

// GetPrimaryIp6Ok returns a tuple with the PrimaryIp6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetPrimaryIp6Ok() (*BriefIPAddressRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryIp6.Get(), o.PrimaryIp6.IsSet()
}

// HasPrimaryIp6 returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasPrimaryIp6() bool {
	if o != nil && o.PrimaryIp6.IsSet() {
		return true
	}

	return false
}

// SetPrimaryIp6 gets a reference to the given NullableBriefIPAddressRequest and assigns it to the PrimaryIp6 field.
func (o *WritableDeviceWithConfigContextRequest) SetPrimaryIp6(v BriefIPAddressRequest) {
	o.PrimaryIp6.Set(&v)
}

// SetPrimaryIp6Nil sets the value for PrimaryIp6 to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetPrimaryIp6Nil() {
	o.PrimaryIp6.Set(nil)
}

// UnsetPrimaryIp6 ensures that no value is present for PrimaryIp6, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetPrimaryIp6() {
	o.PrimaryIp6.Unset()
}

// GetOobIp returns the OobIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetOobIp() BriefIPAddressRequest {
	if o == nil || IsNil(o.OobIp.Get()) {
		var ret BriefIPAddressRequest
		return ret
	}
	return *o.OobIp.Get()
}

// GetOobIpOk returns a tuple with the OobIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetOobIpOk() (*BriefIPAddressRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.OobIp.Get(), o.OobIp.IsSet()
}

// HasOobIp returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasOobIp() bool {
	if o != nil && o.OobIp.IsSet() {
		return true
	}

	return false
}

// SetOobIp gets a reference to the given NullableBriefIPAddressRequest and assigns it to the OobIp field.
func (o *WritableDeviceWithConfigContextRequest) SetOobIp(v BriefIPAddressRequest) {
	o.OobIp.Set(&v)
}

// SetOobIpNil sets the value for OobIp to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetOobIpNil() {
	o.OobIp.Set(nil)
}

// UnsetOobIp ensures that no value is present for OobIp, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetOobIp() {
	o.OobIp.Unset()
}

// GetCluster returns the Cluster field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetCluster() BriefClusterRequest {
	if o == nil || IsNil(o.Cluster.Get()) {
		var ret BriefClusterRequest
		return ret
	}
	return *o.Cluster.Get()
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetClusterOk() (*BriefClusterRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cluster.Get(), o.Cluster.IsSet()
}

// HasCluster returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasCluster() bool {
	if o != nil && o.Cluster.IsSet() {
		return true
	}

	return false
}

// SetCluster gets a reference to the given NullableBriefClusterRequest and assigns it to the Cluster field.
func (o *WritableDeviceWithConfigContextRequest) SetCluster(v BriefClusterRequest) {
	o.Cluster.Set(&v)
}

// SetClusterNil sets the value for Cluster to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetClusterNil() {
	o.Cluster.Set(nil)
}

// UnsetCluster ensures that no value is present for Cluster, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetCluster() {
	o.Cluster.Unset()
}

// GetVirtualChassis returns the VirtualChassis field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetVirtualChassis() BriefVirtualChassisRequest {
	if o == nil || IsNil(o.VirtualChassis.Get()) {
		var ret BriefVirtualChassisRequest
		return ret
	}
	return *o.VirtualChassis.Get()
}

// GetVirtualChassisOk returns a tuple with the VirtualChassis field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetVirtualChassisOk() (*BriefVirtualChassisRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.VirtualChassis.Get(), o.VirtualChassis.IsSet()
}

// HasVirtualChassis returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasVirtualChassis() bool {
	if o != nil && o.VirtualChassis.IsSet() {
		return true
	}

	return false
}

// SetVirtualChassis gets a reference to the given NullableBriefVirtualChassisRequest and assigns it to the VirtualChassis field.
func (o *WritableDeviceWithConfigContextRequest) SetVirtualChassis(v BriefVirtualChassisRequest) {
	o.VirtualChassis.Set(&v)
}

// SetVirtualChassisNil sets the value for VirtualChassis to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetVirtualChassisNil() {
	o.VirtualChassis.Set(nil)
}

// UnsetVirtualChassis ensures that no value is present for VirtualChassis, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetVirtualChassis() {
	o.VirtualChassis.Unset()
}

// GetVcPosition returns the VcPosition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetVcPosition() int32 {
	if o == nil || IsNil(o.VcPosition.Get()) {
		var ret int32
		return ret
	}
	return *o.VcPosition.Get()
}

// GetVcPositionOk returns a tuple with the VcPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetVcPositionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.VcPosition.Get(), o.VcPosition.IsSet()
}

// HasVcPosition returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasVcPosition() bool {
	if o != nil && o.VcPosition.IsSet() {
		return true
	}

	return false
}

// SetVcPosition gets a reference to the given NullableInt32 and assigns it to the VcPosition field.
func (o *WritableDeviceWithConfigContextRequest) SetVcPosition(v int32) {
	o.VcPosition.Set(&v)
}

// SetVcPositionNil sets the value for VcPosition to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetVcPositionNil() {
	o.VcPosition.Set(nil)
}

// UnsetVcPosition ensures that no value is present for VcPosition, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetVcPosition() {
	o.VcPosition.Unset()
}

// GetVcPriority returns the VcPriority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetVcPriority() int32 {
	if o == nil || IsNil(o.VcPriority.Get()) {
		var ret int32
		return ret
	}
	return *o.VcPriority.Get()
}

// GetVcPriorityOk returns a tuple with the VcPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetVcPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.VcPriority.Get(), o.VcPriority.IsSet()
}

// HasVcPriority returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasVcPriority() bool {
	if o != nil && o.VcPriority.IsSet() {
		return true
	}

	return false
}

// SetVcPriority gets a reference to the given NullableInt32 and assigns it to the VcPriority field.
func (o *WritableDeviceWithConfigContextRequest) SetVcPriority(v int32) {
	o.VcPriority.Set(&v)
}

// SetVcPriorityNil sets the value for VcPriority to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetVcPriorityNil() {
	o.VcPriority.Set(nil)
}

// UnsetVcPriority ensures that no value is present for VcPriority, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetVcPriority() {
	o.VcPriority.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WritableDeviceWithConfigContextRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceWithConfigContextRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WritableDeviceWithConfigContextRequest) SetDescription(v string) {
	o.Description = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *WritableDeviceWithConfigContextRequest) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceWithConfigContextRequest) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *WritableDeviceWithConfigContextRequest) SetComments(v string) {
	o.Comments = &v
}

// GetConfigTemplate returns the ConfigTemplate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetConfigTemplate() BriefConfigTemplateRequest {
	if o == nil || IsNil(o.ConfigTemplate.Get()) {
		var ret BriefConfigTemplateRequest
		return ret
	}
	return *o.ConfigTemplate.Get()
}

// GetConfigTemplateOk returns a tuple with the ConfigTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetConfigTemplateOk() (*BriefConfigTemplateRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigTemplate.Get(), o.ConfigTemplate.IsSet()
}

// HasConfigTemplate returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasConfigTemplate() bool {
	if o != nil && o.ConfigTemplate.IsSet() {
		return true
	}

	return false
}

// SetConfigTemplate gets a reference to the given NullableBriefConfigTemplateRequest and assigns it to the ConfigTemplate field.
func (o *WritableDeviceWithConfigContextRequest) SetConfigTemplate(v BriefConfigTemplateRequest) {
	o.ConfigTemplate.Set(&v)
}

// SetConfigTemplateNil sets the value for ConfigTemplate to be an explicit nil
func (o *WritableDeviceWithConfigContextRequest) SetConfigTemplateNil() {
	o.ConfigTemplate.Set(nil)
}

// UnsetConfigTemplate ensures that no value is present for ConfigTemplate, not even an explicit nil
func (o *WritableDeviceWithConfigContextRequest) UnsetConfigTemplate() {
	o.ConfigTemplate.Unset()
}

// GetLocalContextData returns the LocalContextData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeviceWithConfigContextRequest) GetLocalContextData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.LocalContextData
}

// GetLocalContextDataOk returns a tuple with the LocalContextData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeviceWithConfigContextRequest) GetLocalContextDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.LocalContextData) {
		return nil, false
	}
	return &o.LocalContextData, true
}

// HasLocalContextData returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasLocalContextData() bool {
	if o != nil && !IsNil(o.LocalContextData) {
		return true
	}

	return false
}

// SetLocalContextData gets a reference to the given interface{} and assigns it to the LocalContextData field.
func (o *WritableDeviceWithConfigContextRequest) SetLocalContextData(v interface{}) {
	o.LocalContextData = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *WritableDeviceWithConfigContextRequest) GetTags() []NestedTagRequest {
	if o == nil || IsNil(o.Tags) {
		var ret []NestedTagRequest
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceWithConfigContextRequest) GetTagsOk() ([]NestedTagRequest, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []NestedTagRequest and assigns it to the Tags field.
func (o *WritableDeviceWithConfigContextRequest) SetTags(v []NestedTagRequest) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *WritableDeviceWithConfigContextRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceWithConfigContextRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *WritableDeviceWithConfigContextRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *WritableDeviceWithConfigContextRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o WritableDeviceWithConfigContextRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WritableDeviceWithConfigContextRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	toSerialize["device_type"] = o.DeviceType
	toSerialize["role"] = o.Role
	if o.Tenant.IsSet() {
		toSerialize["tenant"] = o.Tenant.Get()
	}
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	if !IsNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if o.AssetTag.IsSet() {
		toSerialize["asset_tag"] = o.AssetTag.Get()
	}
	toSerialize["site"] = o.Site
	if o.Location.IsSet() {
		toSerialize["location"] = o.Location.Get()
	}
	if o.Rack.IsSet() {
		toSerialize["rack"] = o.Rack.Get()
	}
	if o.Position.IsSet() {
		toSerialize["position"] = o.Position.Get()
	}
	toSerialize["face"] = o.Face
	if o.Latitude.IsSet() {
		toSerialize["latitude"] = o.Latitude.Get()
	}
	if o.Longitude.IsSet() {
		toSerialize["longitude"] = o.Longitude.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Airflow) {
		toSerialize["airflow"] = o.Airflow
	}
	if o.PrimaryIp4.IsSet() {
		toSerialize["primary_ip4"] = o.PrimaryIp4.Get()
	}
	if o.PrimaryIp6.IsSet() {
		toSerialize["primary_ip6"] = o.PrimaryIp6.Get()
	}
	if o.OobIp.IsSet() {
		toSerialize["oob_ip"] = o.OobIp.Get()
	}
	if o.Cluster.IsSet() {
		toSerialize["cluster"] = o.Cluster.Get()
	}
	if o.VirtualChassis.IsSet() {
		toSerialize["virtual_chassis"] = o.VirtualChassis.Get()
	}
	if o.VcPosition.IsSet() {
		toSerialize["vc_position"] = o.VcPosition.Get()
	}
	if o.VcPriority.IsSet() {
		toSerialize["vc_priority"] = o.VcPriority.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if o.ConfigTemplate.IsSet() {
		toSerialize["config_template"] = o.ConfigTemplate.Get()
	}
	if o.LocalContextData != nil {
		toSerialize["local_context_data"] = o.LocalContextData
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WritableDeviceWithConfigContextRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"device_type",
		"role",
		"site",
		"face",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWritableDeviceWithConfigContextRequest := _WritableDeviceWithConfigContextRequest{}

	err = json.Unmarshal(data, &varWritableDeviceWithConfigContextRequest)

	if err != nil {
		return err
	}

	*o = WritableDeviceWithConfigContextRequest(varWritableDeviceWithConfigContextRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "device_type")
		delete(additionalProperties, "role")
		delete(additionalProperties, "tenant")
		delete(additionalProperties, "platform")
		delete(additionalProperties, "serial")
		delete(additionalProperties, "asset_tag")
		delete(additionalProperties, "site")
		delete(additionalProperties, "location")
		delete(additionalProperties, "rack")
		delete(additionalProperties, "position")
		delete(additionalProperties, "face")
		delete(additionalProperties, "latitude")
		delete(additionalProperties, "longitude")
		delete(additionalProperties, "status")
		delete(additionalProperties, "airflow")
		delete(additionalProperties, "primary_ip4")
		delete(additionalProperties, "primary_ip6")
		delete(additionalProperties, "oob_ip")
		delete(additionalProperties, "cluster")
		delete(additionalProperties, "virtual_chassis")
		delete(additionalProperties, "vc_position")
		delete(additionalProperties, "vc_priority")
		delete(additionalProperties, "description")
		delete(additionalProperties, "comments")
		delete(additionalProperties, "config_template")
		delete(additionalProperties, "local_context_data")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "custom_fields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWritableDeviceWithConfigContextRequest struct {
	value *WritableDeviceWithConfigContextRequest
	isSet bool
}

func (v NullableWritableDeviceWithConfigContextRequest) Get() *WritableDeviceWithConfigContextRequest {
	return v.value
}

func (v *NullableWritableDeviceWithConfigContextRequest) Set(val *WritableDeviceWithConfigContextRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWritableDeviceWithConfigContextRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWritableDeviceWithConfigContextRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWritableDeviceWithConfigContextRequest(val *WritableDeviceWithConfigContextRequest) *NullableWritableDeviceWithConfigContextRequest {
	return &NullableWritableDeviceWithConfigContextRequest{value: val, isSet: true}
}

func (v NullableWritableDeviceWithConfigContextRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWritableDeviceWithConfigContextRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
