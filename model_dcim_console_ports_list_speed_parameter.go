/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.11 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// DcimConsolePortsListSpeedParameter the model 'DcimConsolePortsListSpeedParameter'
type DcimConsolePortsListSpeedParameter int32

// List of dcim_console_ports_list_speed_parameter
const (
	DCIMCONSOLEPORTSLISTSPEEDPARAMETER__115200 DcimConsolePortsListSpeedParameter = 115200
	DCIMCONSOLEPORTSLISTSPEEDPARAMETER__1200   DcimConsolePortsListSpeedParameter = 1200
	DCIMCONSOLEPORTSLISTSPEEDPARAMETER__19200  DcimConsolePortsListSpeedParameter = 19200
	DCIMCONSOLEPORTSLISTSPEEDPARAMETER__2400   DcimConsolePortsListSpeedParameter = 2400
	DCIMCONSOLEPORTSLISTSPEEDPARAMETER__38400  DcimConsolePortsListSpeedParameter = 38400
	DCIMCONSOLEPORTSLISTSPEEDPARAMETER__4800   DcimConsolePortsListSpeedParameter = 4800
	DCIMCONSOLEPORTSLISTSPEEDPARAMETER__57600  DcimConsolePortsListSpeedParameter = 57600
	DCIMCONSOLEPORTSLISTSPEEDPARAMETER__9600   DcimConsolePortsListSpeedParameter = 9600
)

// All allowed values of DcimConsolePortsListSpeedParameter enum
var AllowedDcimConsolePortsListSpeedParameterEnumValues = []DcimConsolePortsListSpeedParameter{
	115200,
	1200,
	19200,
	2400,
	38400,
	4800,
	57600,
	9600,
}

func (v *DcimConsolePortsListSpeedParameter) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DcimConsolePortsListSpeedParameter(value)
	for _, existing := range AllowedDcimConsolePortsListSpeedParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DcimConsolePortsListSpeedParameter", value)
}

// NewDcimConsolePortsListSpeedParameterFromValue returns a pointer to a valid DcimConsolePortsListSpeedParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDcimConsolePortsListSpeedParameterFromValue(v int32) (*DcimConsolePortsListSpeedParameter, error) {
	ev := DcimConsolePortsListSpeedParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DcimConsolePortsListSpeedParameter: valid values are %v", v, AllowedDcimConsolePortsListSpeedParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DcimConsolePortsListSpeedParameter) IsValid() bool {
	for _, existing := range AllowedDcimConsolePortsListSpeedParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to dcim_console_ports_list_speed_parameter value
func (v DcimConsolePortsListSpeedParameter) Ptr() *DcimConsolePortsListSpeedParameter {
	return &v
}

type NullableDcimConsolePortsListSpeedParameter struct {
	value *DcimConsolePortsListSpeedParameter
	isSet bool
}

func (v NullableDcimConsolePortsListSpeedParameter) Get() *DcimConsolePortsListSpeedParameter {
	return v.value
}

func (v *NullableDcimConsolePortsListSpeedParameter) Set(val *DcimConsolePortsListSpeedParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableDcimConsolePortsListSpeedParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableDcimConsolePortsListSpeedParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDcimConsolePortsListSpeedParameter(val *DcimConsolePortsListSpeedParameter) *NullableDcimConsolePortsListSpeedParameter {
	return &NullableDcimConsolePortsListSpeedParameter{value: val, isSet: true}
}

func (v NullableDcimConsolePortsListSpeedParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDcimConsolePortsListSpeedParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
