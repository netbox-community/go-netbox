/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.11 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// DcimRacksListOuterUnitParameter the model 'DcimRacksListOuterUnitParameter'
type DcimRacksListOuterUnitParameter string

// List of dcim_racks_list_outer_unit_parameter
const (
	DCIMRACKSLISTOUTERUNITPARAMETER_IN DcimRacksListOuterUnitParameter = "in"
	DCIMRACKSLISTOUTERUNITPARAMETER_MM DcimRacksListOuterUnitParameter = "mm"
)

// All allowed values of DcimRacksListOuterUnitParameter enum
var AllowedDcimRacksListOuterUnitParameterEnumValues = []DcimRacksListOuterUnitParameter{
	"in",
	"mm",
}

func (v *DcimRacksListOuterUnitParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DcimRacksListOuterUnitParameter(value)
	for _, existing := range AllowedDcimRacksListOuterUnitParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DcimRacksListOuterUnitParameter", value)
}

// NewDcimRacksListOuterUnitParameterFromValue returns a pointer to a valid DcimRacksListOuterUnitParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDcimRacksListOuterUnitParameterFromValue(v string) (*DcimRacksListOuterUnitParameter, error) {
	ev := DcimRacksListOuterUnitParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DcimRacksListOuterUnitParameter: valid values are %v", v, AllowedDcimRacksListOuterUnitParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DcimRacksListOuterUnitParameter) IsValid() bool {
	for _, existing := range AllowedDcimRacksListOuterUnitParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to dcim_racks_list_outer_unit_parameter value
func (v DcimRacksListOuterUnitParameter) Ptr() *DcimRacksListOuterUnitParameter {
	return &v
}

type NullableDcimRacksListOuterUnitParameter struct {
	value *DcimRacksListOuterUnitParameter
	isSet bool
}

func (v NullableDcimRacksListOuterUnitParameter) Get() *DcimRacksListOuterUnitParameter {
	return v.value
}

func (v *NullableDcimRacksListOuterUnitParameter) Set(val *DcimRacksListOuterUnitParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableDcimRacksListOuterUnitParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableDcimRacksListOuterUnitParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDcimRacksListOuterUnitParameter(val *DcimRacksListOuterUnitParameter) *NullableDcimRacksListOuterUnitParameter {
	return &NullableDcimRacksListOuterUnitParameter{value: val, isSet: true}
}

func (v NullableDcimRacksListOuterUnitParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDcimRacksListOuterUnitParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
