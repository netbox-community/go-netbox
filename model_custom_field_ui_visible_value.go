/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.11 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// CustomFieldUiVisibleValue * `always` - Always * `if-set` - If set * `hidden` - Hidden
type CustomFieldUiVisibleValue string

// List of CustomField_ui_visible_value
const (
	CUSTOMFIELDUIVISIBLEVALUE_ALWAYS CustomFieldUiVisibleValue = "always"
	CUSTOMFIELDUIVISIBLEVALUE_IF_SET CustomFieldUiVisibleValue = "if-set"
	CUSTOMFIELDUIVISIBLEVALUE_HIDDEN CustomFieldUiVisibleValue = "hidden"
)

// All allowed values of CustomFieldUiVisibleValue enum
var AllowedCustomFieldUiVisibleValueEnumValues = []CustomFieldUiVisibleValue{
	"always",
	"if-set",
	"hidden",
}

func (v *CustomFieldUiVisibleValue) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CustomFieldUiVisibleValue(value)
	for _, existing := range AllowedCustomFieldUiVisibleValueEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CustomFieldUiVisibleValue", value)
}

// NewCustomFieldUiVisibleValueFromValue returns a pointer to a valid CustomFieldUiVisibleValue
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCustomFieldUiVisibleValueFromValue(v string) (*CustomFieldUiVisibleValue, error) {
	ev := CustomFieldUiVisibleValue(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CustomFieldUiVisibleValue: valid values are %v", v, AllowedCustomFieldUiVisibleValueEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CustomFieldUiVisibleValue) IsValid() bool {
	for _, existing := range AllowedCustomFieldUiVisibleValueEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CustomField_ui_visible_value value
func (v CustomFieldUiVisibleValue) Ptr() *CustomFieldUiVisibleValue {
	return &v
}

type NullableCustomFieldUiVisibleValue struct {
	value *CustomFieldUiVisibleValue
	isSet bool
}

func (v NullableCustomFieldUiVisibleValue) Get() *CustomFieldUiVisibleValue {
	return v.value
}

func (v *NullableCustomFieldUiVisibleValue) Set(val *CustomFieldUiVisibleValue) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomFieldUiVisibleValue) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomFieldUiVisibleValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomFieldUiVisibleValue(val *CustomFieldUiVisibleValue) *NullableCustomFieldUiVisibleValue {
	return &NullableCustomFieldUiVisibleValue{value: val, isSet: true}
}

func (v NullableCustomFieldUiVisibleValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomFieldUiVisibleValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
