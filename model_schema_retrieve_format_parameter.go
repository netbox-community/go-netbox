/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.11 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// SchemaRetrieveFormatParameter the model 'SchemaRetrieveFormatParameter'
type SchemaRetrieveFormatParameter string

// List of schema_retrieve_format_parameter
const (
	SCHEMARETRIEVEFORMATPARAMETER_JSON SchemaRetrieveFormatParameter = "json"
	SCHEMARETRIEVEFORMATPARAMETER_YAML SchemaRetrieveFormatParameter = "yaml"
)

// All allowed values of SchemaRetrieveFormatParameter enum
var AllowedSchemaRetrieveFormatParameterEnumValues = []SchemaRetrieveFormatParameter{
	"json",
	"yaml",
}

func (v *SchemaRetrieveFormatParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SchemaRetrieveFormatParameter(value)
	for _, existing := range AllowedSchemaRetrieveFormatParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SchemaRetrieveFormatParameter", value)
}

// NewSchemaRetrieveFormatParameterFromValue returns a pointer to a valid SchemaRetrieveFormatParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSchemaRetrieveFormatParameterFromValue(v string) (*SchemaRetrieveFormatParameter, error) {
	ev := SchemaRetrieveFormatParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SchemaRetrieveFormatParameter: valid values are %v", v, AllowedSchemaRetrieveFormatParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SchemaRetrieveFormatParameter) IsValid() bool {
	for _, existing := range AllowedSchemaRetrieveFormatParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to schema_retrieve_format_parameter value
func (v SchemaRetrieveFormatParameter) Ptr() *SchemaRetrieveFormatParameter {
	return &v
}

type NullableSchemaRetrieveFormatParameter struct {
	value *SchemaRetrieveFormatParameter
	isSet bool
}

func (v NullableSchemaRetrieveFormatParameter) Get() *SchemaRetrieveFormatParameter {
	return v.value
}

func (v *NullableSchemaRetrieveFormatParameter) Set(val *SchemaRetrieveFormatParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemaRetrieveFormatParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemaRetrieveFormatParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemaRetrieveFormatParameter(val *SchemaRetrieveFormatParameter) *NullableSchemaRetrieveFormatParameter {
	return &NullableSchemaRetrieveFormatParameter{value: val, isSet: true}
}

func (v NullableSchemaRetrieveFormatParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemaRetrieveFormatParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
